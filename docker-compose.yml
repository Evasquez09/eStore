version: "3.7"
services:
  app:
    build:
      args:
        user: john
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: estore
    container_name: estore-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - estore
  db:
    image: mysql:8
    env_file:
      - .env
    container_name: estore-db
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
      - ./storage/db:/var/lib/mysql
    networks:
      - estore
  nginx:
    image: nginx:1.19-alpine
    container_name: estore-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d
    networks:
      - estore
  redis:
    image: redis:6-alpine
    container_name: estore-redis
    ports:
      - "6379:6379"
    networks:
      - estore
  node:
    image: node:lts-alpine
    container_name: estore-node
    working_dir: /var/www
    volumes:
      - .:/var/www
    networks:
      - estore
networks:
  estore:
    driver: bridge
